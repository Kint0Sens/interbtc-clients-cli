name: Continuous integration

permissions:
  contents: write
  pull-requests: read

on: [pull_request, push]

jobs:
  test:
    name: Test Suite
    runs-on: [self-hosted, linux]

    strategy:
      matrix:
        metadata:
          - parachain-metadata-kintsugi
          - parachain-metadata-testnet
          - standalone-metadata

    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - name: Install System Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
          cmake pkg-config libssl-dev git clang curl libc6-dev
      - name: Set variables
        run: |
          echo "TOOLCHAIN=$(rustup show active-toolchain | cut -d " " -f1)" >> $GITHUB_ENV
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.TOOLCHAIN }}
          override: true
          components: rustfmt
      - name: fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - run: rustup component add clippy
      - name: clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --release --workspace --features ${{ matrix.metadata }}
      - name: check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --release --workspace --features ${{ matrix.metadata }}
      - name: test
        uses: actions-rs/cargo@v1
        env:
          RUST_LOG: info,regalloc=warn
        with:
          command: test
          args: --release --workspace --features ${{ matrix.metadata }}
      - name: upload artifacts - vault
        uses: actions/upload-artifact@v3
        with:
          name: vault-${{ matrix.metadata }}
          path: target/release/vault
          retention-days: 10
      - name: upload artifacts - oracle
        uses: actions/upload-artifact@v3
        with:
          name: oracle-${{ matrix.metadata }}
          path: target/release/oracle
          retention-days: 10
      - name: upload artifacts - faucet
        uses: actions/upload-artifact@v3
        with:
          name: faucet-${{ matrix.metadata }}
          path: target/release/faucet
          retention-days: 10

  build_docker:
    if: github.ref_type == 'tag' || contains(fromJson('["master", "dev", "release-notes"]'), github.ref_name)
    needs: [test]
    runs-on: [self-hosted, linux]
    strategy:
      matrix:
        client: ["oracle", "vault", "faucet"]
        metadata:
          - parachain-metadata-kintsugi
          - parachain-metadata-testnet
          - standalone-metadata
    steps:
      - uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          TS=$(date +%s)
          echo ::set-output name=branch_name::$(echo ${GITHUB_REF##*/})
          echo ::set-output name=tag::${TAG}
          echo ::set-output name=ts::${TS}

      - uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.client}}-${{ matrix.metadata }}

      - run: |
          find ./

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup docker context for buildx
        id: buildx-context
        run: |
          docker context create builders

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          endpoint: builders

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: docker.io/interlayhq/interbtc-clients
          tags: |
            type=sha,prefix=${{ steps.prep.outputs.branch_name }}-,suffix=-${{ steps.prep.outputs.ts }}
            type=ref,event=branch
            type=ref,event=tag

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          file: .deploy/Dockerfile
          build-args: |
            BINARY=${{ matrix.client }}-${{ matrix.metadata }}
            PROFILE=release

  publish-draft-release:
    if: github.ref_type == 'tag'
    runs-on: [self-hosted, linux]
    needs: [test]
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - run: |
          find ./artifacts
          git-chglog --output CHANGELOG.md $GITHUB_REF_NAME

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          draft: true
          files: |
            artifacts/*/*
