image: "registry.gitlab.com/interlay/containers/rust-base:nightly-2021-03-15"

.rust-base-job:
    variables:
        CARGO_HOME: /cargo
        RUSTC_WRAPPER: /usr/local/bin/sccache
    before_script:
        - rustup show
        - rustc --version
        - rustfmt --version
        - cargo --version
        - SCCACHE_START_SERVER=1 SCCACHE_IDLE_TIMEOUT=0 sccache
        - sccache -s

.only-refs: &only_refs
    only:
        - tags
        - master
        - dev

workflow:
    rules:
        - if: $CI_COMMIT_TAG
        - if: $CI_COMMIT_BRANCH

stages:
    - test
    - build
    - deploy
    - release

test-clients:
    stage: test
    extends:
        - .rust-base-job
    variables:
        BITCOIN_RPC_URL: "http://localhost:18443"
        BITCOIN_RPC_USER: "rpcuser"
        BITCOIN_RPC_PASS: "rpcpassword"
        METADATA: standalone-metadata
    services:
        - name: ruimarinho/bitcoin-core:0.21-alpine
          alias: bitcoind
          command:
              - bitcoind
              - -regtest
              - -rpcuser=rpcuser
              - -rpcpassword=rpcpassword
    script:
        - cargo fmt -- --check
        - cargo check --workspace --release --features $METADATA
        - cargo clippy --workspace --release --features $METADATA
        - cargo test --workspace --release --features $METADATA
        - cargo test --manifest-path bitcoin/Cargo.toml --test "*" --features uses-bitcoind -- --test-threads=1
    cache:
        key: cargo
        paths:
            - .cargo

build-clients:
    stage: build
    extends:
        - .rust-base-job
    script:
        - |
            cargo check --workspace --release --target $PLATFORM --features $METADATA
            cargo build --workspace --release --target $PLATFORM --features $METADATA
            cp target/$PLATFORM/release/oracle target/$PLATFORM/release/oracle-$METADATA
            cp target/$PLATFORM/release/vault target/$PLATFORM/release/vault-$METADATA
            cp target/$PLATFORM/release/faucet target/$PLATFORM/release/faucet-$METADATA

        - ls -l target/$PLATFORM/release/
    variables:
        DOCKER_REGISTRY_IMAGE: interlayhq/interbtc-clients
    parallel:
        matrix:
            - PLATFORM: x86_64-unknown-linux-gnu
              FILE_EXTENSION: [""]
              METADATA:
                - parachain-metadata-interlay
                - parachain-metadata-kintsugi
                - parachain-metadata-testnet
                - standalone-metadata
#            - PLATFORM: x86_64-pc-windows-gnu
#              FILE_EXTENSION: [".exe"]
    artifacts:
        name: "${CI_COMMIT_REF_SLUG}"
        expire_in: 30 days
        paths:
            - target/$PLATFORM/release/oracle-$METADATA${FILE_EXTENSION}
            - target/$PLATFORM/release/vault-$METADATA${FILE_EXTENSION}
            - target/$PLATFORM/release/faucet-$METADATA${FILE_EXTENSION}

build-docker-images:
    stage: deploy
    parallel:
        matrix:
            - ARTIFACT_BIN: ["oracle", "vault", "faucet"]
              METADATA:
                - parachain-metadata-interlay
                - parachain-metadata-kintsugi
                - parachain-metadata-testnet
                - standalone-metadata
    image:
        name: gcr.io/kaniko-project/executor:v1.7.0-debug
        entrypoint: [""]
    variables:
        DOCKER_REGISTRY_IMAGE: interlayhq/interbtc-clients
    script:
        - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"$DOCKER_HUB_TOKEN\"}}}" > /kaniko/.docker/config.json
        - |
            /kaniko/executor --force \
                --build-arg BINARY=${ARTIFACT_BIN}-${METADATA} \
                --build-arg PROFILE="x86_64-unknown-linux-gnu/release" \
                --context ${CI_PROJECT_DIR} \
                --dockerfile ${CI_PROJECT_DIR}/.deploy/Dockerfile \
                --destination ${DOCKER_REGISTRY_IMAGE}:${ARTIFACT_BIN}-${METADATA}-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}-$(date +%s) \
                --destination ${DOCKER_REGISTRY_IMAGE}:${ARTIFACT_BIN}-${METADATA}-${CI_COMMIT_REF_SLUG}
    <<: *only_refs

release-github:
    stage: release
    image: registry.gitlab.com/interlay/containers/github-publisher:master
    script:
        - gh auth status
        - git-chglog --output CHANGELOG.md $CI_COMMIT_TAG
        - gh release -R https://github.com/interlay/interbtc-clients create $CI_COMMIT_TAG --title $CI_COMMIT_TAG -F CHANGELOG.md -d target/x86_64-unknown-linux-gnu/release/*
    only:
        - tags
